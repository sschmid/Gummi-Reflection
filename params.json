{"name":"Gummi Reflection","tagline":"Reflection for Objective-C","body":"# Gummi Reflection\r\n![Gummi Reflection Logo](http://sschmid.com/Libs/Gummi-Reflection/Gummi-Reflection-128.png)\r\n\r\n## Description\r\nGummi Reflection is a set of class methods to easily inspect objects in Objective-C. It's a small subproject mainly used by [Gummi Injection] and [Gummi Commander].\r\n\r\n## How to use Gummi Reflection\r\n\r\n#### Inspect an object\r\n\r\n```objective-c\r\nCar *car = [[Car alloc] init];\r\n\r\nBOOL isClass = [GRReflection isClass:car];\r\nBOOL isProtocol = [GRReflection isProtocol:car];\r\nBOOL isBlock = [GRReflection isBlock:car];\r\nBOOL isInstance = [GRReflection isInstance:car];\r\n\r\nNSLog(@\"isClass = %d\", isClass);        // NO\r\nNSLog(@\"isProtocol = %d\", isProtocol);  // NO\r\nNSLog(@\"isBlock = %d\", isBlock);        // NO\r\nNSLog(@\"isInstance = %d\", isInstance);  // YES\r\n```\r\n\r\n#### Get all property names of a class\r\n\r\n```objective-c\r\nNSArray *propertyNames = [GRReflection getAllPropertyNamesOfClass:[Car class]];\r\nNSLog(@\"propertyNames = %@\", propertyNames);  // [@\"wheel\", @\"engine\"]\r\n```\r\n\r\n#### Get the property type of a class\r\n\r\n```objective-c\r\n// returns class 'Wheel'\r\nid wheelType = [GRReflection getTypeForProperty:@\"wheel\"\r\n                                        ofClass:[Car class]];\r\n\r\n// returns protocol <Engine>\r\nid engineType = [GRReflection getTypeForProperty:@\"engine\"\r\n                                         ofClass:[Car class]];\r\n```\r\n\r\n## Projects that use Gummi Reflection\r\n* [Gummi Injection] - A lightweight dependency injection framework for Objective-C\r\n* [Gummi Commander] - Event Command Mapping System for Objective-C\r\n\r\n[CocoaPods]: http://cocoapods.org\r\n[Gummi Injection]: http://sschmid.github.com/Gummi-Injection\r\n[Gummi Commander]: http://sschmid.github.com/Gummi-Commander","google":"UA-37678776-1","note":"Don't delete this file! It's used internally to help with page regeneration."}